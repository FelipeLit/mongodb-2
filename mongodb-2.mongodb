db.createCollection('user')

db.user.insertMany([{
    nombres: "pedro",
    apellidos: "perez",
    correo: "pedro@gmail.com",
    genero: "M",
    edad: 20
    },
    {
    nombres: "juan",
    apellidos: "mosalve",
    correo: "juan@gmail.com",
    genero: "M",
    edad: 23
    },
    {
    nombres: "luis",
    apellidos: "rosa",
    correo: "luis@gmail.com",
    genero: "M",
    edad: 30
    },
    {
    nombres: "ana",
    apellidos: "rios",
    correo: "ana@gmail.com",
    genero: "F",
    edad: 28
    },
    {
    nombres: "romeo",
    apellidos: "florez",
    correo: "romeo@gmail.com",
    genero: "M",
    edad: 20
    },
    {
    nombres: "luisa",
    apellidos: "jaramillo",
    correo: "luisa@gmail.com",
    genero: "F",
    edad: 26
    },
    {
    nombres: "ferney",
    apellidos: "trujillo",
    correo: "ferney@gmail.com",
    genero: "M",
    edad: 35
    },
    {
    nombres: "marina",
    apellidos: "rios",
    correo: "marina@gmail.com",
    genero: "F",
    edad: 39
    },
    {
    nombres: "javier",
    apellidos: "gallego",
    correo: "javier@gmail.com",
    genero: "M",
    edad: 45
    },
    {
    nombres: "andrea",
    apellidos: "rios",
    correo: "andrea@gmail.com",
    genero: "F",
    edad: 45
    },
]);

db.user.find(); //ver la coleccion


db.user.find({edad:{$eq: 20}})//igual que
db.user.find({edad:{$ne: 20}})//negacion
db.user.find({edad:{$gt: 20}})//mayor que
db.user.find({edad:{$lt: 20}})//menor que
db.user.find({edad:{$gte: 20}})//mayor igual que
db.user.find({edad:{$lte: 20}})//menor igual que
db.user.find({edad:{$in: [5,10,45]}})//si contiene o no los valores
db.user.find({edad: {$nin: [35,39,45]}})//traigame la dat que no contenga estos valores
db.user.find({edad: {$exists: true}})//comando donde existe o no existe un campo
db.user.find({nombres: {$regex: /^marina/}})//buscar un datos con los valores

db.user.find(
    {$and:
        [
            {edad: {$gt: 20}},
            {edad: {$lt: 30}}
        ]
    }); //es un if con un and

db.user.find(
    {$or:
        [
            {edad: {$gt: 20}},
            {edad: {$lt: 30}}
        ]
    }); //es un if con un or

//agregar campo pais a toda la coleccion
db.user.updateOne(
    {_id: ObjectId('65f393c556e2cdb02a67402a')},
    {$set: {
        pais: "italia"
    }}
);
    
//actividad de clase
//1. todos los usarios que sean mayores de 18 años
db.user.find({edad: {$gt: 18}})

//2.obtener los usarios que sean de londres o de paris
//vamos agrgar un campo PAIS a 4 usuarios
db.user.updateMany(
    {_id: ObjectId('65f393c556e2cdb02a67402e')},
    {$set: {
        pais:"londres"
    }},
    {_id: ObjectId('65f393c556e2cdb02a67402d')},
    {$set: {
        pais: "londres"
    }}
);

//actualizar todos
db.user.updateMany(
    {},
    {$set: {
        pais:"paris"
    }}
);

//desarrollo 2
db.user.find(
    {$or:
        [
            {pais: {$eq: "londres"}},
            {pais: {$eq: "paris"}}
        ]
    }
);

//3. obtener usuarios que ganen mas de 200 al mes y tengan menos de 30 años
db.user.find(
    {$and:
        [
        {edad: {$lte: 30}},
        {salario: {$gt: 2000}}
        ]
    }); 

db.user.insertOne({
    nombres: "pedro",
    apellidos: "perez",
    correo: "pedro@gmail.com",
    genero: "M",
    edad: 29,
    salario: 2500
    }
)
//eliminar un registro de una coleccion
db.user.deleteOne({_id: ObjectId("id")});

//4. obtener todos los usarios que sean de España y ganen mas de 3000 al mes
//agregando España a un registro
db.user.updateOne(
    {_id: ObjectId('65f4a2a16b80297bccc61709')},
    {$set: {
        salario:  3500
    }}
)

//desarrollo del ejercicio
db.user.find(
    {$and:
        [
            {pais: {$eq: "españa"}},
            {salario: {$gte: 3000}}
        ]
    }
);


//5. obtener todos los usarios entre 25 y 35 años
db.user.find(
    {$and:
        [
        {edad: {$gte: 25}},
        {edad: {$lte: 35}}
        ]
    }
);

//6. obtener todos los usarios que no sean de EE.UU

//agregando estados unidos al rewgistro de un usuarios
db.user.updateOne(
    {_id: ObjectId('65f4a2a16b80297bccc61709')},
    {$set:{pais: "estados unidos"}}
)

db.user.find();

//desarrollo dej ejercicio
db.user.find(
    {pais: {$nin: ["estados unidos"]}})

//7. usarios de londres y que ganen mas de 2500 or tengan mas de 30años

//añadiendo usarios con esas caracteristicas
db.user.updateOne(
    {_id: ObjectId('65f393c556e2cdb02a674032')},
    {$set:{
        pais: "londres",
        edad: 32,
        salario: 2000
    }}
)

//desarrollo del ejercicio
db.user.find({
    pais: "londres",
    $or: [
        { salario: { $gte: 2500 } },
        { edad: { $gte: 30 } }
    ]
})

//8. obtener los usarios de australia y tengan un peso mayor a 140libras

//agregando usuarios con las caracteristicas
db.user.updateOne(
    {_id: ObjectId('65f393c556e2cdb02a67402d')},
    {$set:{
        pais: "Australia",
        peso: 133
    }}
)

//desarrollo del ejercicio
db.user.find(
    {pais: "Australia", peso: {$gte: 130}}
)

// 9. obtener todos los usuarios que no sean de londres ni paris

db.user.find(
    {pais: {$nin: ["londres", "paris"]}}
)

//10. usaurios que ganen mas de 2000 al mes o tengan mas de 40 años

//agregando resgitros con las caracteristicas

db.user.updateOne(
    {_id: ObjectId('65f4ac1dbb1af0958c1acb3f')},
    {$set:{salario: 2080}}
)

//desarrollo del ejercicio
db.user.find(
    {$or:
        [{salario: {$gte: 2000}}, {edad: {$gte: 40}}]
    }
)

//11. usuarios de canada & ganen  mas de $4000 o tengan una altura mayor a 180cm

//agregando regsitros con las caracteristicas
db.user.updateOne(
    {_id: ObjectId('65f4ac1dbb1af0958c1acb3f')},
    {$set:{
        pais: "canada",
        altura: 165,
        salario: 4500
    }}
);

db.user.find();

//desarrollando el ejercicio
db.user.find({
    pais: "canada",
    $or:
    [
        {salario: {$gte: 4000}}, 
        {altura: {$gte: 180}}
    ]
});

//12. usuarios de italia y tengan entre 20 y 30 años

//agregando usuarios con las caracteristicas
db.user.updateOne(
    {_id: ObjectId('65f393c556e2cdb02a67402d')},
    {$set:
        {pais: "italia"},
    }
);

db.user.find({
   pais: "italia",
   edad:{$gt: 20},
   edad: {$lt: 30}
})

//13. usaurios que no tengan correos registrados

//eliminar correo 
db.user.updateOne({_id: ObjectId('65f393c556e2cdb02a67402a')}, 
{$unset: {correo:"pedro@gmail.com"}})

//desarrollo el ejercicio

db.user.find(
    {correo : {$exists: false}}
)

//14. obtener todos los usuarios que sean de Francia y que su salario este entre 3000 y 5000

//update regsitros para que cumpla condiciones
db.user.updateOne(
    {_id: ObjectId('65f393c556e2cdb02a67402e')},
    {$set:
        {salario: 4500}
    }
)

//desarrollo del ejercicio
db.user.find({
    pais: "francia",
    salario: {$gt: 3500},
    salario: {$lt: 5000}
    }
)

//15. obtener usuarios que sean de Brasil ytenga un peso menor a 120 libras o mayor 140 libras
//update regsitros para que cumpla condiciones
db.user.updateOne(
    {_id: ObjectId('65f393c556e2cdb02a674031')},
    {$set:
        {pais: "brasil",peso: 145},
        
    }
)

//desarrollo dej ejercicio
db.user.find(
    {pais: "brasil",
    $or:[
        {peso: {$lt:120}},
        {peso: {$gt: 140}}
    ]
    }
)

//16. registros de argetina o chile y tengan edad menor a 25

//update regsitros para que cumpla condiciones
db.user.updateOne(
    {_id: ObjectId('65f4ac1dbb1af0958c1acb37')},
    {$set:
        {pais: "chile"}
    }
)

db.user.find(
    {edad: {$lt: 25},
    $or:[
        {pais: {$eq: "chile"}},
        {pais: {$eq: "argentina"}}
    ]
    }
)

//17. usarios que no sean ni de españa ni de mexico y ganen menos de 3000 al mes

db.user.find({
    pais: {$nin: ["españa", "mexico"]},
    salario: {$lt: 3000}
})

//18. usarios de Alemania y salrio menos a 4000 o edad mayor a 35 años

//update regsitros para que cumpla condiciones
db.user.updateOne(
    {_id: ObjectId('65f4ac1dbb1af0958c1acb3c')},
    {$set:
        {pais: "alemania", edad: 38}
    }
)

//dearrollo ejercicio
db.user.find(
    {pais: "alemania",
    $or: [
        {salario: {$lt: 4000}},
        {edad: {$gt: 35}}
    ]
})

//19. usarios que no sean de colombia y eastura menor a 170

db.user.find({
    pais: {$nin: ["colombia"]},
    altura: {$lt: 170}
})

//20. usaurios de india y no tengan salario

db.user.find({
    pais: {$eq: "india"},
    salario: {$exists: false}
})



//========================= segundo taller ============================

//=====================actualizar==================
//1. Incrementar el salario de todos los usuarios en un 10%.
db.user.updateMany({},
        {$mul: {salario:1.1}}
)

//2. Cambiar la ciudad de residencia de los 
//usuarios que actualmente viven en "New York" a "Los Ángeles"

db.user.updateMany({ciudad: {$eq: "new york"}},
    {$set: {ciudad:"los angeles"}}
)

//3. Agregar el correo electrónico "nuevo@riwi.com" 
//al usuario con nombre "Juan" y apellido "Perez".

db.user.updateOne({nombres: "juan", apellidos: "perez"},
{$set: {correo: "nuevo@riwi.com"}}
)

//4. Actualizar la edad del usuario con correo electrónico "ejemplo@riwi.es" a 35 años.
db.user.updateOne({correo: "ejemplo@riwi.es"},
    {$set: {edad: 35}}
)

//5. Cambiar el país de residencia de los usuarios que son de "Mexico" a "Canada".
db.user.updateMany({pais: "mexico"},
    {$set: {pais: "canada"}}
)

//6. Aumentar la altura de todos los usuarios en 5 centímetros.
db.user.updateMany({},
        {$inc: {altura: 5}}
    )

//7. Cambiar el apellido del usuario con correo electrónico "otro@riwi.net" a "González".
db.user.updateOne({correo: "otro@riwi.net"},
    {$set: {apellidos: "Gonzalez"}}
)

//8. Actualizar el peso del usuario con nombre "Maria" a 140 libras.
db.user.updateMany({nombres: "Maria"},
    {$set: {peso: 140}}
)

//9.Incrementar el salario de todos los usuarios que son de "Estados Unidos" en un 15%

db.user.updateMany({pais: "estados unidos"},
    {$mul: {salario: 1.15}}
)

//10. Actualizar el correo electrónico del usuario con nombre "Pedro" a "nuevo_correo@riwi.co".
db.user.updateMany({nombres:"pedro"},
    {$set: {correo: "nuevo_correo@riwi.co"}}
)

//11. Cambiar la edad de todos los usuarios menores de 30 años a 30 años.

db.user.updateMany({edad: {$lt: 30}},
    {$set: {edad: 30}}
    )

//12. Incrementar el salario de los usuarios que tienen un salario inferior a 3000 dólares en un 20%
db.user.updateMany({salario: {$lt: 3000}},
    {$mul: {salario: 1.20}}
    )

//13. Actualizar la ciudad de residencia de todos los usuarios que actualmente viven en "Bogotá" a "Medellín".

db.user.updateMany({ciudad: "bogota"},
    {$set: {ciudad: "medellin"}}
)

//14. Cambiar el país de residencia de los usuarios con un salario superior a 5000 dólares a "Australia".

db.user.updateMany({salario: {$gt: 5000}},
    {$set: {pais: "australia"}}
)

//15. Reducir la edad de todos los usuarios que tienen más de 50 años en 5 años.
db.user.updateMany(
    {edad: {$gt: 50}},
    {$set: {edad: 5}}
    )

//16. Actualizar el peso de los usuarios que pesan más de 200 libras a 180 libras.
db.user.updateMany(
    {peso: {$gt: 200}},
    {$set: {peso: 180}}
    )

//17. Incrementar el salario de los usuarios que viven en "London" en un 25%.

db.user.updateMany(
    {pais: "London"},
    {$mul: {salario: 1.25}}
    )

//18. Cambiar el apellido de los usuarios con un salario superior a 4000 dólares a "Smith".

db.user.updateMany(
    {salario: {$gt: 4000}},
    {$set: {apellidos: "smith"}}
    )


//19. Actualizar el correo electrónico de todos los usuarios cuyo nombre empiece por "A" a "nuevo@riwi.es".

db.user.updateMany(
    {nombre: {$regex: /^a/i}},
    {$set: {correo: "nuevo@riwi.es"}}
    )

//20. Cambiar la ciudad de residencia de los usuarios con una altura inferior a 160 centímetros a "París".

db.user.updateMany(
    {altura: {$lt: 160}},
    {$set: {ciudad: "paris"}}
    )

db.user.find()

//====================eliminar=====================

//1. Eliminar todos los usuarios que tienen un salario menor que 2000 dólares.
db.user.deleteMany({
    salario: {$lt: 2000}
})

//2. Eliminar usuarios que tienen una edad menor que 25 años.

db.user.deleteMany({
    edad: {$lt: 25}
})

//3. Borrar todos los usuarios que viven en "París".
db.user.deleteMany({
    pais: {$eq: "paris"}
})

//4. Eliminar usuarios que tienen un peso superior a 180 libras.
db.user.deleteMany({
    peso: {$gt: 180}
})

//5. Eliminar usuarios que tienen una altura inferior a 160 centímetros.
db.user.deleteMany({
    altura: {$gt: 160}
})

//6. Eliminar todos los usuarios que tienen el nombre "John" y el apellido "Doe".
db.user.deleteMany({
    nombres: {$eq: "john"},
    apellidos: {$eq: "doe"}
})

//7. Borrar usuarios que tienen una dirección de 
//correo electrónico específica, por ejemplo, "borrar@riwi.com".
db.user.deleteMany({
    correo:"borrar@riwi.com"
})

//8. Eliminar usuarios que no tienen una dirección de correo electrónico registrada.

db.user.deleteMany({
    correo: {$exists: false}
})


//9. Eliminar usuarios que viven en "Tokyo".
db.user.deleteMany({
    ciduad: "tokyo"
})

//10. Borrar todos los usuarios que son menores de 18 años.
db.user.deleteMany({
    edad: {$lt: 18}
})

//11. Eliminar usuarios que tienen un salario igual a 0.
db.user.deleteMany({
    salario: 0
})

//12. Borrar usuarios que viven en "New York" y tienen un salario superior a 5000 dólares.
db.user.deleteMany({
    ciudad: {$eq: "new york"},
    salario: {$gt: 5000}
})

//13. Eliminar usuarios que tienen una dirección de correo 
//electrónico que contiene la palabra "spam".

db.user.deleteMany({
    correo: {$regex: /spam/}
})

//14. borrar usuarios que viven en "Bello" y tienen más de 50 años.
db.user.deleteMany({
    ciudad: "bello",
    edad: {$gt: 50}
})

//15. Eliminar todos los usuarios que tienen el apellido "González".
db.user.deleteMany({
    apellidos: {$eq: "gonzález"}
})

//16. Borrar usuarios que tienen una edad superior a 70 años.
db.user.deleteMany({
    edad: {$gt: 70}
})

//17. Eliminar usuarios que tienen un país 
//de residencia igual a "Canadá" y un salario inferior a 4000 dólares.

db.user.deleteMany({
    pais: {$eq: "canada"},
    salario: {$lt: 4000}
})

//18. Borrar usuarios que tienen un salario entre 1000 y 2000 dólares.
db.user.deleteMany({
    $and: [
        {salario: {$gt: 1000}},
        {salario: {$lt: 2000}}
    ]
})

//19. Eliminar usuarios que tienen una edad igual a 30 años.

db.user.deleteMany({
    edad: {$eq: 30}
})

//20. Borrar usuarios que tienen una altura superior a 190 centímetros.

db.user.deleteMany({
    altura: {$gt: 190}
})

//elimina todo el registro
db.user.deleteOne({_id:ObjectId('65f393c556e2cdb02a67402f')},
{$unset: {ciduad: "new york"}}
)

//eliminar un campo especifico 
db.user.updateOne({"_id":ObjectId('65f393c556e2cdb02a67402d')}, 
{$unset:{apelldios:""}})

// agregar un  campo especifico
db.user.updateOne(
    {_id:ObjectId('65f393c556e2cdb02a67402d')},
    {$set: 
        {apellidos: "perez"}
    }
)

//actualizar un campo especifico de varios registros
db.user.updateMany({_id: {$in: [ObjectId('65f4e5d115031cfdd19c54b7'),ObjectId('65f4e5d115031cfdd19c54b6')]}},
    {$set: {ciudad: "bogota"}}
)


db.user.find()



